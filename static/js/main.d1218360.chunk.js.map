{"version":3,"sources":["components/SearchInput.tsx","components/SearchResults.tsx","config/config.ts","utils/wiki.ts","config/routes.ts","pages/Home.tsx","pages/Article.tsx","App.tsx","index.tsx"],"names":["SearchInput","setTerm","label","htmlFor","aria-label","tabIndex","autoFocus","type","name","onInput","event","currentTarget","value","SearchResults","result","selected","onEnter","map","index","onKeyPress","key","getOnKeyPress","onFocus","config","defaults","namespace","defaultApi","client","wiki","apiUrl","search","term","routes","path","component","history","useState","results","setResults","setSelected","a","preventDefault","length","action","onSubmit","handleSubmit","push","exact","props","sections","setSections","divRef","useRef","useEffect","title","console","log","match","params","page","then","content","current","focus","ref","onKeyUp","reset","App","route","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"2QAceA,EAPK,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,MAAX,OAChB,gCACI,uBAAOC,QAAQ,SAAf,SAAyBD,IACzB,uBAAOE,aAAW,6BAA6BC,SAAU,EAAGC,WAAW,EAAMC,KAAK,OAAOC,KAAK,SAASC,QAAS,SAAAC,GAAK,OAAIT,EAAQS,EAAMC,cAAcC,c,MCG7J,IAaeC,EAbO,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAApB,OAClB,mCACI,6BACKF,EAAOG,KAAI,SAACL,EAAOM,GAAR,OACR,oBAAIb,SAAU,EACVc,WAAY,mBAThC,SAAuBC,EAAaJ,GAChB,UAARI,GAAiBJ,IAQcK,CAAX,EAAED,IAA4BJ,IAC1CM,QAAS,kBAAMP,EAASH,IAF5B,SAGiBA,GAARM,W,QCbVK,EAPA,CACXC,SAAU,CACNC,UAAW,wBACXC,WAAY,uCCAdC,E,MAASC,GAAK,CAACC,OAAQN,EAAOC,SAASE,aAEhCI,EAAS,SAACC,GACnB,OAAOJ,EAAOG,OAAOC,ICeVC,EAfU,CACrB,CACIC,KAAM,IACNzB,KAAM,eACN0B,UCJK,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAAuC,EAE1BC,mBAAiB,IAFS,mBAE3CL,EAF2C,KAErC9B,EAFqC,OAGpBmC,mBAAmB,IAHC,mBAG3CC,EAH2C,KAGlCC,EAHkC,OAIlBF,mBAAiB,IAJC,mBAI3CrB,EAJ2C,KAIjCwB,EAJiC,iDAOlD,WAA4B7B,GAA5B,SAAA8B,EAAA,yDACI9B,EAAM+B,mBACFV,EAAKW,OAAS,GAFtB,4BAGQJ,EAHR,SAG0BR,EAAOC,GAHjC,mBAGwCM,SAHxC,0DAPkD,sBAkBlD,OACI,8BACI,uBAAMM,OAAO,GAAGC,SAAU,SAAAlC,GAAK,OApBW,2CAoBPmC,CAAanC,IAAhD,UACI,cAAC,EAAD,CAAaR,MAAM,gBAAgBD,QAASA,IAC5C,yCAAYoC,EAAQK,OAApB,gBACA,cAAC,EAAD,CAAe1B,QAT3B,WACImB,EAAQW,KAAR,mBAAyB/B,KAQmBD,OAAQuB,EAAStB,SAAUwB,UDlBvEQ,OAAO,GAEX,CACId,KAAM,iBACNzB,KAAM,WACN0B,UEPQ,SAACc,GAAqC,IAAD,EACjBZ,mBAAoB,IADH,mBAC1Ca,EAD0C,KAChCC,EADgC,KAG3CC,EAASC,iBAA8B,MAgB7C,OATAC,qBAAU,WHVM,IAACC,EGWbC,QAAQC,IAAI,OHXCF,EGYRN,EAAMS,MAAMC,OAAO3B,KHXrBJ,EAAOgC,KAAKL,IGYVM,MAAyB,SAAAD,GAAI,OAAIA,EAAKE,aACtCD,MAAK,SAAAhD,GAAK,OAAIsC,EAAYtC,MAC1BgD,MAAK,kCAAMT,EAAOW,eAAb,aAAM,EAAgBC,aAEjC,CAACf,EAAMS,MAAMC,OAAO3B,OAGnB,qBAAKiC,IAAKb,EACL9C,SAAU,EACV4D,QAAS,SAACvD,GAAD,OAjBlB,SAAeA,GACO,cAAdA,EAAMU,KACN4B,EAAMb,QAAQW,KAAK,KAeEoB,CAAMxD,IAF/B,SAGKuC,EAAShC,KAAI,SAACL,EAAOM,GAClB,OACI,gCACI,oBAAIb,SAAU,EAAd,SAAkBO,EAAM0C,QACxB,mBAAGjD,SAAU,EAAb,SAAiBO,EAAMiD,YAFjB3C,SFjBtB6B,OAAO,IGgBAoB,EA3B0B,SAAAnB,GACrC,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,UACKhB,EAAOf,KAAI,SAACmD,EAAOlD,GAChB,OACI,cAAC,IAAD,CAEIe,KAAMmC,EAAMnC,KACZc,MAAOqB,EAAMrB,MACbsB,OAAQ,SAACrB,GAAD,OACJ,cAACoB,EAAMlC,UAAP,yBACI1B,KAAM4D,EAAM5D,MACRwC,GACAoB,EAAMpB,UAPb9B,aCTrCoD,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d1218360.chunk.js","sourcesContent":["import './SearchInput.css'\n\ntype SearchInputProps = {\n    setTerm: (term: string) => void\n    label: string\n}\n\nconst SearchInput = ({setTerm, label}: SearchInputProps) => (\n    <div>\n        <label htmlFor=\"search\">{label}</label>\n        <input aria-label=\"inserisi parola da cercare\" tabIndex={0} autoFocus={true} type=\"text\" name='search' onInput={event => setTerm(event.currentTarget.value)}/>\n    </div>\n);\n\nexport default SearchInput;\n","import './SearchResults.css'\n\ntype SearchResultsProps = {\n    result: string[]\n    selected: (term: string) => void\n    onEnter: () => void\n}\n\n\nfunction getOnKeyPress(key: string, onEnter: () => void) {\n        if (key === 'Enter') onEnter()\n}\n\nconst SearchResults = ({result, selected, onEnter}: SearchResultsProps) => (\n    <>\n        <ul>\n            {result.map((value, index) =>\n                <li tabIndex={0}\n                    onKeyPress={({key}) => getOnKeyPress(key, onEnter)}\n                    onFocus={() => selected(value)}\n                    key={index}>{value}</li>\n            )}\n        </ul>\n    </>\n)\n\nexport default SearchResults;","const config = {\n    defaults: {\n        namespace: 'holly.accessible.wiki',\n        defaultApi: 'https://it.wikipedia.org/w/api.php'\n    }\n}\n\nexport default config;","import wiki from 'wikijs';\nimport config from \"../config/config\";\n\nconst client = wiki({apiUrl: config.defaults.defaultApi})\n\nexport const search = (term: string) => {\n    return client.search(term);\n}\n\nexport const page = (title: string) => {\n    return client.page(title);\n}","import IRoute from \"../interfaces/IRoute\";\n\n\nimport Home from '../pages/Home';\nimport Article from \"../pages/Article\";\n\nconst routes: IRoute[] = [\n    {\n        path: '/',\n        name: 'Cerca parola',\n        component: Home,\n        exact: true\n    },\n    {\n        path: '/article/:term',\n        name: 'Articolo',\n        component: Article,\n        exact: true\n    }\n]\n\nexport default routes;","import React, {useState} from \"react\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport SearchInput from \"../components/SearchInput\";\nimport SearchResults from \"../components/SearchResults\";\nimport {search} from \"../utils/wiki\";\n\nconst Home = ({history}: RouteComponentProps<any>) => {\n\n    const [term, setTerm] = useState<string>('');\n    const [results, setResults] = useState<string[]>([]);\n    const [selected, setSelected] = useState<string>('')\n\n\n    async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        if (term.length > 0) {\n            setResults((await search(term)).results)\n        }\n    }\n\n    function onSelected() {\n        history.push(`/article/${selected}`)\n    }\n\n    return (\n        <div>\n            <form action=\"\" onSubmit={event => handleSubmit(event)}>\n                <SearchInput label='Cerca Termine' setTerm={setTerm}/>\n                <p>Trovati {results.length} risultati</p>\n                <SearchResults onEnter={onSelected} result={results} selected={setSelected}/>\n            </form>\n        </div>\n    );\n}\n\nexport default Home","import React, {useEffect, useRef, useState} from \"react\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {page} from \"../utils/wiki\";\n\ntype Section = {\n    title: string,\n    content: string\n}\n\nconst Article = (props: RouteComponentProps<any>) => {\n    const [sections, setSections] = useState<Section[]>([])\n\n    const divRef = useRef<HTMLDivElement | null>(null);\n\n    function reset(event: React.KeyboardEvent<HTMLDivElement>) {\n        if (event.key === 'Backspace')\n            props.history.push('/')\n    }\n\n    useEffect(() => {\n        console.log(\"fx\")\n        page(props.match.params.term)\n            .then<Section[] | string>(page => page.content())\n            .then(value => setSections(value as Section[]))\n            .then(() => divRef.current?.focus())\n\n    }, [props.match.params.term])\n\n    return (\n        <div ref={divRef}\n             tabIndex={0}\n             onKeyUp={(event) => reset(event)}>\n            {sections.map((value, index) => {\n                return (\n                    <div key={index}>\n                        <h5 tabIndex={0}>{value.title}</h5>\n                        <p tabIndex={0}>{value.content}</p>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Article;","import React from 'react';\nimport {HashRouter, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport './App.css';\nimport routes from './config/routes';\n\n\nconst App: React.FunctionComponent<{}> = props => {\n    return (\n        <div>\n            <HashRouter>\n                <Switch>\n                    {routes.map((route, index) => {\n                        return (\n                            <Route\n                                key={index}\n                                path={route.path}\n                                exact={route.exact}\n                                render={(props: RouteComponentProps<any>) => (\n                                    <route.component\n                                        name={route.name}\n                                        {...props}\n                                        {...route.props}\n                                    />\n                                )}\n                            />\n                        );\n                    })}\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}